import express from 'express'
import future from 'fp-future'
import morgan from 'morgan'
import cors from 'cors'
import { Server } from 'http'
import { env } from 'decentraland-commons'

import { useErrorHandler } from './middlewares/useErrorHandler'
import { initializeWearablesRoutes } from './routes'


// TODO: Review this file and adjust our base server!!!

const API_VERSION = env.get('API_VERSION', 'v1')

export const app = express()

export async function main(port = 8080) {
  const defer = future<Server>()
  const router = express.Router()

  // CORS
  app.use(cors({
    exposedHeaders: [
      'ETag',
      'Cache-Control',
      'Content-Language',
      'Content-Type',
      'Expires',
      'Last-Modified',
      'Pragma'
    ]
  }))

  // LOGGER
  app.use(morgan('dev', {}))

  // VERSION
  app.use(`/${API_VERSION}`, router)

  // WIRING
  initializeWearablesRoutes(router)

  // ERROR HANDLING (must to go last!)
  app.use(useErrorHandler)

  const server = app.listen(port, () => {
    if (server.listening) {
      console.log(`Starting the server on port ${port}`)
      defer.resolve(server)
    } else {
      defer.reject(new Error(`Failed to listen to port ${port}`))
    }
  })

  return defer
}
