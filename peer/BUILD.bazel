load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("//tools/npm:package.bzl", "dataform_npm_package")
load("@npm_bazel_karma//:index.bzl", "karma_web_test_suite")

package(default_visibility = ["//visibility:public"])

ts_library(
    name = "peer",
    srcs = glob(["src/**/*.ts"]),
    module_name = "katalyst/peer",
    tsconfig = "//:tsconfig.json",
    deps = [
        "@npm//@types/simple-peer",
        "@npm//eventemitter3",
        "@npm//fp-future",
        "@npm//simple-peer",
    ],
)

dataform_npm_package(
    name = "package",
    package_layers = [
        "//:common.package.json",
        "peer.package.json",
    ],
    deps = [":peer"],
)

ts_library(
    name = "tests",
    testonly = 1,
    srcs = glob(["test/**/*.ts"]),
    tsconfig = "//:tsconfig.json",
    deps = [
        ":peer",
        "@npm//@types/fetch-mock",
        "@npm//@types/jasmine",
        "@npm//@types/sinon",
        "@npm//fetch-mock",
        "@npm//jasmine",
        "@npm//sinon",
        "@npm//ts-mock-imports",
    ],
)

karma_web_test_suite(
    name = "config_test",
    data = [
        ":tests",
        "@npm//eventemitter3:eventemitter3__umd",
        "@npm//fetch-mock",
        "@npm//fp-future:fp-future__umd",
        "@npm//jasmine",
        "@npm//simple-peer",
        "@npm//sinon",
        "@npm//ts-mock-imports",
    ],
    static_files = [
        "test/config.js",
        "@npm//fp-future:fp-future.umd.js",
    ],
    tags = [],
    runtime_deps = [
        ":tests",
        "@npm//eventemitter3:eventemitter3__umd",
        "@npm//fetch-mock",
        "@npm//fp-future:fp-future__umd",
        "@npm//jasmine",
        "@npm//simple-peer",
        "@npm//sinon",
        "@npm//ts-mock-imports",
    ],
    deps = [
        "test/config.js",
        ":tests",
        "@npm//eventemitter3",
        "@npm//fetch-mock",
        "@npm//fp-future",
        "@npm//jasmine",
        "@npm//simple-peer",
        "@npm//sinon",
        "@npm//ts-mock-imports",
    ],
)
