# This file is auto generated. Look for docker-compose.yml_template, on
# local folder to perform any changes
# If you perform any change on this file, will be erased on the next deploy

version: "3"

volumes:
  prometheus_data: {}
  grafana_data: {}
  content_server_storage: {}
  nginx_storage: {}

services:
  comms-server:
    image: decentraland/catalyst:latest
    working_dir: /app
    command: comms
    environment:
      - METRICS=true
    ports:
      - "9000:9000"
    restart: always

  content-server:
    image: decentraland/catalyst:latest
    working_dir: /app
    command: content
    environment:
      - METRICS=true
      - STORAGE_ROOT_FOLDER=/app/storage/content_server/
      - SEGMENT_WRITE_KEY=$segment_write_key
      - DCL_API_URL=$dcl_api_url
      - ETH_NETWORK=$eth_network
    ports:
      - "6969:6969"
    restart: always
    volumes:
      - /srv/catalyst_content/storage:/app/storage/content_server/

  lambdas:
    image: decentraland/catalyst:latest
    working_dir: /app
    command: lambdas
    environment:
      - METRICS=true
      - CONTENT_SERVER_ADDRESS=https://$content_server_address/content/
      - ENS_OWNER_PROVIDER_URL=$ens_owner_providerl_url
    ports:
      - "7070:7070"

  prometheus:
    image: prom/prometheus:v2.15.2
    volumes:
      - prometheus_data:/prometheus
      - ./local/prom/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    depends_on:
      - comms-server
      - content-server
      - cadvisor
    restart: always

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - content-server
      - comms-server
      - lambdas

  grafana:
    image: grafana/grafana:6.5.2
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./local/grafana/provisioning:/etc/grafana/provisioning/
    env_file:
      - ./local/grafana/provisioning/config.monitoring
    restart: always

  nginx:
    image: nginx:1.15-alpine
    ports:
       - "80:80"
       - "443:443"
    command: "/bin/sh -c 'while :; do sleep 10s & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
       - ./local/nginx/conf.d:/etc/nginx/conf.d
       - ./local/certbot/conf:/etc/letsencrypt
       - ./local/certbot/www:/var/www/certbot
    depends_on:
       - grafana
       - prometheus
       - lambdas
       - content-server
       - comms-server

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./local/certbot/conf:/etc/letsencrypt
      - ./local/certbot/www:/var/www/certbot
