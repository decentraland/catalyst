package(default_visibility = ["//visibility:public"])

load("@npm_bazel_typescript//:index.bzl", "ts_library")

ts_library(
    name = "content",
    srcs = glob(["**/*.ts"]),
    module_name = "@katalyst/content",
    deps = [
        "//commons/servers",
        "//commons/utils",
        "//contracts",
        "@npm//@types",
        "@npm//@types/analytics-node",
        "@npm//@types/compression",
        "@npm//@types/destroy",
        "@npm//@types/log4js",
        "@npm//@types/ms",
        "@npm//@types/multer",
        "@npm//@types/merge-stream",
        "@npm//@types/node",
        "@npm//@types/node-fetch",
        "@npm//@types/node-pg-migrate",
        "@npm//@types/on-finished",
        "@npm//@types/parallel-transform",
        "@npm//@types/pg-promise",
        "@npm//@types/uuid",
        "@npm//abort-controller",
        "@npm//analytics-node",
        "@npm//aws-sdk",
        "@npm//compression",
        "@npm//cors",
        "@npm//destroy",
        "@npm//dcl-crypto",
        "@npm//dcl-catalyst-client",
        "@npm//dcl-catalyst-commons",
        "@npm//eth-crypto",
        "@npm//express",
        "@npm//ip",
        "@npm//log4js",
        "@npm//morgan",
        "@npm//ms",
        "@npm//multer",
        "@npm//merge-stream",
        "@npm//node-fetch",
        "@npm//node-pg-migrate",
        "@npm//on-finished",
        "@npm//parallel-transform",
        "@npm//pg-promise",
        "@npm//@dcl/urn-resolver",
        "@npm//uuid",
        "@npm//web3x",
    ],
)
